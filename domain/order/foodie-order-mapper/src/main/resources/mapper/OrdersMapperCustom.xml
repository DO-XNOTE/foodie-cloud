<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.order.mapper.OrdersMapperCustom" >

  <resultMap id="myOrdersVO" type="com.imooc.order.pojo.vo.MyOrdersVO">
      <id column="orderId" property="orderId" />
      <result column="created_time" property="createdTime" />
      <result column="payMethod" property="payMethod"  />
      <result column="real_pay_amount" property="realPayAmount"  />
      <result column="post_amount" property="postAmount"  />
      <result column="order_status" property="orderStatus"  />
      <result column="isComment" property="isComment"  />

    <collection property="subOrderItemList"
                select="getSubItems"
                column="orderId"
                ofType="com.imooc.order.pojo.vo.MySubOrderItemVO">
        <result column="itemId" property="itemId" />
        <result column="itemName" property="itemName"  />
        <result column="itemImg" property="itemImg"  />
        <result column="itemSpecName" property="itemSpecName" />
        <result column="buyCounts" property="buyCounts" />
        <result column="price" property="price" />
    </collection>
  </resultMap>
<!--
  PageHelper官方解释不支持嵌套的分页查询，这里就导致分页数每次查询都不一样，

  解决方式： 1：前端使用懒加载的方式去解决， 先查询拿到
           2：后端也是相同的思想去做，

  <select id="queryMyOrdersDoNotUse" resultMap="myOrdersVO" parameterType="Map">
    SELECT
        od.id as orderId,
        od.created_time as createdTime,
        od.pay_method as payMethod,
        od.real_pay_amount as realPayAmount,
        od.post_amount as postAmount,
        os.order_status as orderStatus,
        oi.item_id as itemId,
        oi.item_name as itemName,
        oi.item_img as itemImg,
        oi.item_spec_name as itemSpecName,
        oi.buy_counts as buyCounts,
        oi.price as price
    FROM
        orders od
    LEFT JOIN order_status os ON od.id = os.order_id
    LEFT JOIN order_items oi ON od.id = oi.order_id
    WHERE
        od.user_id = #{paramsMap.uerId}
    and
        od.is_delete = 0
        <if test="paramsMap.orderStatus != null ">
            and os.order_status =  #{paramsMap.orderStatus}
        </if>
    ORDER BY od.updated_time
    ASC
  </select>
-->
    <select id="queryMyOrders" resultMap="myOrdersVO" parameterType="Map">
        SELECT
            od.id as orderId,
            od.created_time as createdTime,
            od.pay_method as payMethod,
            od.real_pay_amount as realPayAmount,
            od.post_amount as postAmount,
            os.order_status as orderStatus,
            od.is_comment as isComment
        FROM
            orders od
        LEFT JOIN order_status os ON od.id = os.order_id
        WHERE
            od.user_id = #{paramsMap.uerId}
        and
            od.is_delete = 0
        <if test="paramsMap.orderStatus != null ">
            and os.order_status =  #{paramsMap.orderStatus}
        </if>
        ORDER BY od.updated_time
        ASC
    </select>

    <select id="getSubItems" parameterType="String" resultType="com.imooc.order.pojo.vo.MySubOrderItemVO">
        select
            oi.item_id as itemId,
            oi.item_name as itemName,
            oi.item_img as itemImg,
            oi.item_spec_name as itemSpecName,
            oi.buy_counts as buyCounts,
            oi.price as price
        from
            order_items oi
        where
            oi.order_id = #{orderId}
    </select>

    <select id="getMyOrderStatusCounts" parameterType="Map" resultType="int">
        SELECT
            COUNT(1)
        FROM
            orders o
                LEFT JOIN
            order_status os
            on
                o.id = os.order_id
        WHERE
            o.user_id = #{paramsMap.usertId}
        AND
            os.order_status = #{paramsMap.orderStatus}
        <if test="paramsMap.isComment != null">
            and o.is_comment =  #{paramsMap.isComment}
        </if>
    </select>

    <select id="getMyOrderTrend" parameterType="Map" resultType="com.imooc.order.pojo.OrderStatus">
        SELECT
            os.order_id as orderId,
            os.order_status as orderStatus,
            os.created_time as createdTime,
            os.pay_time as payTime,
            os.deliver_time as deliveTime,
            os.success_time as successTime,
            os.close_time as closeTime,
            os.comment_time as commentTime
        FROM
            orders o
        LEFT JOIN order_status os ON o.id = os.order_id
        WHERE
            o.is_delete = 0
        AND
            o.user_id = #{paramsMap.userId}
        AND
            os.order_status in (20, 30, 40)
        ORDER BY  os.order_id
        DESC
    </select>


</mapper>